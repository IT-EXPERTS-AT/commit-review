name: Commit Review

on:
  push:
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        keyword: ["IMS myin-itex", "DynamoDB myin-itex"]
    outputs:
      pull_requests: ${{ steps.check_commit.outputs.pull_requests }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check commit
        id: check_commit
        run: |
          KEYWORD_SPLIT=(${{ matrix.keyword }})
          KEYWORD="${KEYWORD_SPLIT[0]}"
          REVIEWERS="${KEYWORD_SPLIT[1]}"

          REQUESTS=""

          # for each new commit pushed
          for COMMIT in $(git rev-list ${{ github.event.before }}..${{ github.event.after }}); do

            # github actions cannot create a PR to change workflow files
            if git diff -U0 $COMMIT~1 $COMMIT ':(exclude).github/' | grep -E "^\+.*$KEYWORD.*"; then

              PR_OUTPUT="$(gh api /repos/${{ github.repository }}/commits/$COMMIT/pulls)"

              if [[ $(echo $PR_OUTPUT | jq 'length') -eq 0 ]]; then
                REQUESTS="$REQUESTS $COMMIT:$KEYWORD:$REVIEWERS"
              else
                # Only consider merge commit
                PR_NUMBER=$(echo $PR_OUTPUT | jq ".[] | select(.merge_commit_sha | test(\"$COMMIT\")) | .number")

                if [[ ! -z $PR_NUMBER ]]; then
                  echo "Checking PR $PR_NUMBER for reviewers"

                  EXPECTED_REVIEWERS=($(echo $REVIEWERS | sed 's/,/ /g'))
                  REVIEWS="$(gh api /repos/${{ github.repository }}/pulls/$PR_NUMBER/reviews)"
                  REVIEWED=$(echo $REVIEWS | jq '.[].user.login')

                  MISSING=""
                  for REVIEWER in ${EXPECTED_REVIEWERS[@]}; do
                    if [[ -z $(echo $REVIEWED | grep $REVIEWER) ]]; then
                      MISSING="$MISSING,$REVIEWER"
                    fi
                  done
                  MISSING="$(echo $MISSING | sed 's/^,//g')"

                  if [[ ! -z $MISSING ]]; then
                    REQUESTS="$REQUESTS $COMMIT:$KEYWORD:$MISSING"
                  fi
                fi
              fi
            fi
          done

          echo "::set-output name=pull_requests::$REQUESTS"
  pull_request:
    runs-on: ubuntu-latest
    needs: check
    env:
      REMOTE: origin
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create Pull Request
        run: |
          REQUESTS=(${{ needs.check.outputs.pull_requests }})

          for REQUEST in ${REQUESTS[@]}; do
            DATA=($(echo $REQUEST | sed 's/:/ /g'))
            COMMIT=${DATA[0]}
            KEYWORD=${DATA[1]}
            REVIEWER=${DATA[2]}

            BASE_BRANCH="commit-review-$COMMIT-$KEYWORD-base"
            TARGET_BRANCH="commit-review-$COMMIT-$KEYWORD-target"

            git checkout -b $BASE_BRANCH $COMMIT~1
            git push --set-upstream $REMOTE $BASE_BRANCH

            git checkout -b $TARGET_BRANCH $COMMIT
            git push --set-upstream $REMOTE $TARGET_BRANCH

            gh pr create --title "Review: \"$KEYWORD\" has been used here" \
            --body "Please check if this change is safe" \
            --reviewer "$REVIEWER" \
            --base "$BASE_BRANCH" \
            --head "$TARGET_BRANCH"
          done